// heroSection.style.scss
@import "../../styles/base/typography";

/* ---------- Base layout ---------- */
.ui-home__main__hero {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 2rem;
  width: 100%;
  box-sizing: border-box;
  background: rgba($color: $primary-color, $alpha: 1);
  color: $color-white;
  flex-wrap: wrap; // prevents overflow if items can't fit

  &__content {
    flex: 1 1 50%; // let it shrink/grow
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1.25rem;
    min-width: 280px; // ensures readability
  }

  &__media {
    flex: 1 1 10%;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 240px;
  }

  &__image {
    width: 100%;
    max-width: 100%; // allow it to shrink with container
    height: auto;
    border-radius: 18px;
    object-fit: cover;
  }

  &__title {
    margin: 0;
    line-height: 1.05;
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap; // prevent text from truncating
  }

  &__description {
    max-width: 55rem;
    overflow-wrap: break-word; // avoids text overflow
  }

  // ðŸ“± Responsive breakpoints
  @media (max-width: 1024px) {
    flex-direction: column;
    align-items: center;
    text-align: center;

    &__content,
    &__media {
      flex: 1 1 100%;
      max-width: 100%;
    }

    &__image {
      max-width: 90%; // keeps image inside screen
    }
  }
}

// Hero preloader partial - uses trem-scss variables & mixins
// Place in _hero-preloader.scss or append to your typography file

.hero-preloader {
  display: flex;
  gap: 2rem;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 2rem;
  box-sizing: border-box;
  background: transparent;
  pointer-events: none; // preloader should not be interactive
  user-select: none;

  // content column (left)
  &__content {
    flex: 1 1 55%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    min-width: 0; // allow truncation in flex children
  }

  // media column (right)
  &__media {
    flex: 1 1 40%;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 0;
  }

  // generic shimmer line (used for title/desc/highlight)
  .hp-line {
    position: relative;
    display: block;
    border-radius: 10px;
    background: $hp-bg;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      left: -150%;
      top: 0;
      height: 100%;
      width: 250%;
      background-image: $hp-shimmer;
      animation: service-shimmer 1.2s linear infinite;
    }

    &--title {
      height: 40px;
      width: 70%;
      border-radius: 12px;
    }
    &--highlight {
      height: 18px;
      width: 40%;
      border-radius: 10px;
    }
    &--desc {
      height: 14px;
      width: 90%;
      border-radius: 8px;
    }
  }

  // actions (buttons placeholder)
  &__actions {
    display: flex;
    gap: 12px;
    margin-top: 0.5rem;
  }

  .hp-btn {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    background: $hp-bg;
    min-width: 100px;
    height: 40px;

    &::after {
      content: "";
      position: absolute;
      left: -150%;
      top: 0;
      height: 100%;
      width: 250%;
      background-image: $hp-shimmer;
      animation: service-shimmer 1.2s linear infinite;
    }

    &--primary {
      min-width: 140px;
      height: 44px;
      border-radius: 10px;
    }
    &--outline {
      min-width: 110px;
      height: 40px;
      border-radius: 8px;
    }
  }

  // media placeholder box
  .hp-media {
    width: 100%;
    max-width: 540px;
    height: 260px;
    border-radius: 12px;
    background: $hp-bg;
    position: relative;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      left: -150%;
      top: 0;
      height: 100%;
      width: 250%;
      background-image: $hp-shimmer;
      animation: service-shimmer 1.2s linear infinite;
    }
  }

  // small tweak when hero is shorter (optional)
  &--compact {
    padding: 1.25rem;
    .hp-line--title {
      height: 32px;
    }
    .hp-media {
      height: 180px;
    }
  }
}

/* Reuse shimmer keyframes (keeps consistent from trem-scss) */
@keyframes service-shimmer {
  0% {
    transform: translateX(-60%);
  }
  100% {
    transform: translateX(60%);
  }
}

/* Responsive rules */
@include mq-max($tablet-max) {
  .hero-preloader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
    padding: 1.25rem;

    &__content {
      order: 1;
    }
    &__media {
      order: 2;
      width: 100%;
    }

    .hp-line--title {
      height: 34px;
      width: 85%;
    }
    .hp-line--desc {
      width: 100%;
    }
    .hp-media {
      height: 180px;
      max-width: 100%;
    }
    .hp-btn--primary {
      min-width: 120px;
    }
  }
}

@include mq-max($breakpoint-mobile) {
  .hero-preloader {
    padding: 1rem;
    .hp-line--title {
      height: 28px;
    }
    .hp-media {
      height: 140px;
    }
    .hero-preloader__actions {
      gap: 8px;
    }
  }
}

/* Accessibility: hide from assistive tech explicitly if aria-hidden not present */
.hero-preloader[aria-hidden="true"] {
  .hp-line,
  .hp-btn,
  .hp-media {
    aria-hidden: true;
  }
}
