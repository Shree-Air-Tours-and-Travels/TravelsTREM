MERN Authentication Setup Breakdown
1️⃣ MERN Stack Overview
MERN stands for:

MongoDB (Database)

Express.js (Backend Framework)

React.js (Frontend)

Node.js (Runtime for Backend)

For authentication, the flow is:

User enters credentials on the React frontend.

The frontend makes an API request to the Node.js backend.

The backend validates the credentials and communicates with MongoDB.

If valid, the backend generates a JWT (JSON Web Token) and sends it to the frontend.

The frontend stores the token (e.g., in localStorage or Redux) and uses it for authentication.

Shop Number-105, Ground Floor, Shalimar Complex, Church Road, M I Road, Jaipur - 302001, Opposite Church,Near Om Tower


my-mern-website/
│-- backend/                # Backend (Node.js + Express)
│   ├── models/             # User Model (MongoDB)
│   ├── routes/             # API Routes (Auth)
│   ├── controllers/        # Request Handlers
│   ├── middleware/         # Authentication Middleware
│   ├── config/             # Database Configuration
│   ├── utils/              # Helper Functions (JWT)
│   ├── server.js           # Main Server File
│   ├── .env                # Environment Variables
│
│-- frontend/               # Frontend (React + Redux)
│   ├── src/
│   │   ├── components/     # UI Components
│   │   ├── pages/          # Login, Register, Profile Pages
│   │   ├── redux/          # Redux Store & User Slice
│   │   ├── api/            # API Calls
│   │   ├── App.js          # Main Component
│   │   ├── index.js        # Entry Point
│   ├── package.json        # Frontend Dependencies
│
│-- README.md               # Project Documentation




///////////// sass ////////////////
📂 src
 ├── 📂 styles
 │   ├── 📂 base
 │   │   ├── _reset.scss
 │   │   ├── _typography.scss
 │   │   ├── _global.scss
 │   ├── 📂 components
 │   │   ├── _button.scss
 │   │   ├── _navbar.scss
 │   │   ├── _form.scss
 │   ├── 📂 layout
 │   │   ├── _header.scss
 │   │   ├── _footer.scss
 │   │   ├── _grid.scss
 │   ├── 📂 pages
 │   │   ├── _home.scss
 │   │   ├── _profile.scss
 │   │   ├── _auth.scss
 │   ├── 📂 themes
 │   │   ├── _dark.scss
 │   │   ├── _light.scss
 │   ├── 📂 utils
 │   │   ├── _variables.scss
 │   │   ├── _mixins.scss
 │   │   ├── _functions.scss
 │   ├── main.scss


git branch -m production release
git fetch origin
git branch -u origin/release release
git remote set-head origin -a



// JSONS pattern

{
  "status": "success" | "error",
  "message": "text message",
  "componentData": {
    "title": "string",              // always present
    "description": "string",        // always present
    "data": [],                     // for dynamic DB-fetched data
    "structure": {},                // for static things (UI structure, defaults, etc.)
    "config": {}                    // for any extra settings or metadata
  }
}




// TODO: 
Here leave these points, now till yet things are working fine. Now I want to create a tour's details page, which consists of 4 section. 1st: pictures of the destination or photos 2nd: info of place and price, and time period of package and number of people a package is desiged for and etc 3rd: review section [which shows existing reiviews and user can also enter its review which can be stored in the db] 4th: booking form, which includes [user name, num of people, when to go, when to come, phone number, Gmail, button for submit or contact agent ] Keep the 4th point json different and will work on it seprately one all 3 above points are done. we have these 4 tasks for next, i can go to my tour details page when i click on the book now button from the home page tour card. it takes me to /tours/:{id} and there i want to render these 4 sections so we will go one by one here. i hope you under stand the requirement and i am sending you json i recieve from BE for particular tour.